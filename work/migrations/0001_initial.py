# Generated by Django 2.0.13 on 2020-06-20 18:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import mptt.fields
import work.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
        ('valueaccounting', '0001_initial'),
        ('fobi_contrib_plugins_form_handlers_db_store', '0002_savedformwizarddataentry'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoiceNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=128, verbose_name='invoice number')),
                ('invoice_date', models.DateField(verbose_name='invoice date')),
                ('year', models.IntegerField(verbose_name='year')),
                ('quarter', models.IntegerField(verbose_name='quarter')),
                ('sequence', models.IntegerField(verbose_name='sequence')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='invoice_numbers_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_numbers', to='valueaccounting.Exchange', verbose_name='exchange')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_numbers', to='valueaccounting.EconomicAgent', verbose_name='member')),
            ],
            options={
                'ordering': ('-invoice_date', '-sequence'),
            },
        ),
        migrations.CreateModel(
            name='JoinRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(auto_now_add=True, null=True)),
                ('type_of_user', models.CharField(choices=[('individual', 'individual'), ('collective', 'collective')], default='individual', help_text='* Required fields', max_length=12, verbose_name='Type of user')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('surname', models.CharField(blank=True, max_length=255, verbose_name='Surname (for individual join requests)')),
                ('requested_username', models.CharField(help_text='If you have already an account in OCP, you can login before filling this form to have this project in the same account, or you can choose another username and email to have it separate.', max_length=32, verbose_name='Username')),
                ('email_address', models.EmailField(max_length=96, verbose_name='Email address *')),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='Phone number')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Town/Region where you are based')),
                ('state', models.CharField(choices=[('new', 'new'), ('accepted', 'accepted'), ('declined', 'declined')], default='new', editable=False, max_length=12, verbose_name='state')),
                ('agent', models.ForeignKey(blank=True, help_text='this join request became this EconomicAgent', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_join_requests', to='valueaccounting.EconomicAgent', verbose_name='agent')),
                ('exchange', models.OneToOneField(blank=True, help_text='this join request is linked to this Ocp Exchange', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='join_request', to='valueaccounting.Exchange', verbose_name='exchange')),
                ('fobi_data', models.OneToOneField(blank=True, help_text='this join request is linked to this custom form (fobi SavedFormDataEntry)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='join_request', to='fobi_contrib_plugins_form_handlers_db_store.SavedFormDataEntry', verbose_name='custom fobi entry')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('surname', models.CharField(blank=True, max_length=255, verbose_name='Surname (for individual memberships)')),
                ('requested_username', models.CharField(max_length=32, verbose_name='Requested username')),
                ('email_address', models.EmailField(max_length=96, verbose_name='Email address')),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='Phone number')),
                ('address', models.CharField(blank=True, max_length=255, verbose_name='Where do you live?')),
                ('native_language', models.CharField(blank=True, max_length=255, verbose_name='Languages')),
                ('type_of_membership', models.CharField(choices=[('individual', 'individual membership (min 1 share)'), ('collective', 'collective membership (min 2 shares)')], default='individual', max_length=12, verbose_name='Type of membership')),
                ('number_of_shares', models.IntegerField(default=1, help_text='How many shares would you like to underwrite? Each share is worth 30 Euros', verbose_name='Number of shares')),
                ('description', models.TextField(help_text='Describe your project or collective and the skills or abilities you can offer the cooperative', verbose_name='Description')),
                ('website', models.CharField(blank=True, max_length=255, verbose_name='Website')),
                ('fairnetwork', models.CharField(blank=True, help_text="The username you use in the FairNetwork at <a href='https://fair.coop' target='_blank'>fair.coop</a>", max_length=255, verbose_name='FairNetwork username')),
                ('usefaircoin', models.CharField(blank=True, help_text="If you are in the directory at <a href='https://use.fair-coin.org' target='_blank'>use.fair-coin.org</a> please add the URL to your profile.", max_length=255, verbose_name='UseFaircoin profile')),
                ('fairmarket', models.CharField(blank=True, help_text="If you have an online shop at <a href='https://market.fair.coop' target='_blank'>market.fair.coop</a> please add the URL to your fair shop.", max_length=255, verbose_name='FairMarket shop')),
                ('known_member', models.CharField(blank=True, max_length=255, verbose_name='Are there any FairCoop participant(s) who can give references about you? If so, who?')),
                ('comments_and_questions', models.TextField(blank=True, verbose_name='Comments and questions')),
                ('state', models.CharField(choices=[('new', 'new'), ('accepted', 'accepted'), ('declined', 'declined')], default='new', editable=False, max_length=12, verbose_name='state')),
                ('agent', models.ForeignKey(blank=True, help_text='this membership request became this EconomicAgent', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membership_requests', to='valueaccounting.EconomicAgent', verbose_name='agent')),
            ],
        ),
        migrations.CreateModel(
            name='NewFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=24, verbose_name='name')),
                ('deployment_date', models.DateField(verbose_name='deployment date')),
                ('description', models.TextField(verbose_name='Description')),
                ('permissions', models.TextField(blank=True, null=True, verbose_name='permissions')),
                ('url', models.CharField(blank=True, max_length=255, verbose_name='url')),
                ('screenshot', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='photos', verbose_name='screenshot')),
            ],
            options={
                'ordering': ('-deployment_date',),
            },
        ),
        migrations.CreateModel(
            name='Ocp_Artwork_Type',
            fields=[
                ('general_artwork_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='general.Artwork_Type')),
                ('context_agent', models.ForeignKey(blank=True, help_text='a related OCP context EconomicAgent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_artwork_types', to='valueaccounting.EconomicAgent', verbose_name='context agent')),
                ('facet', models.OneToOneField(blank=True, help_text='a related OCP Facet', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_artwork_type', to='valueaccounting.Facet', verbose_name='ocp facet')),
                ('facet_value', models.ForeignKey(blank=True, help_text='a related OCP FacetValue', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_artwork_type', to='valueaccounting.FacetValue', verbose_name='ocp facet_value')),
            ],
            options={
                'verbose_name': 'Type of General Artwork/Resource',
                'verbose_name_plural': 'o-> Types of General Artworks/Resources',
            },
            bases=('general.artwork_type',),
        ),
        migrations.CreateModel(
            name='Ocp_Record_Type',
            fields=[
                ('general_record_type', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='general.Record_Type')),
                ('exchange_type', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_record_type', to='valueaccounting.ExchangeType', verbose_name='ocp exchange type')),
                ('ocpRecordType_ocp_artwork_type', mptt.fields.TreeForeignKey(blank=True, help_text='a related General Artwork Type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_record_types', to='work.Ocp_Artwork_Type', verbose_name='general artwork_type')),
            ],
            options={
                'verbose_name': 'Type of General Record',
                'verbose_name_plural': 'o-> Types of General Records',
            },
            bases=('general.record_type',),
        ),
        migrations.CreateModel(
            name='Ocp_Skill_Type',
            fields=[
                ('general_job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='general.Job')),
                ('event_type', models.OneToOneField(blank=True, help_text='a related OCP EventType', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ocp_skill_type', to='valueaccounting.EventType', verbose_name='ocp event_type')),
                ('facet', models.OneToOneField(blank=True, help_text='a related OCP Facet', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_skill_type', to='valueaccounting.Facet', verbose_name='ocp facet')),
                ('facet_value', models.OneToOneField(blank=True, help_text='a related OCP FacetValue', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_skill_type', to='valueaccounting.FacetValue', verbose_name='ocp facet_value')),
                ('ocp_artwork_type', mptt.fields.TreeForeignKey(blank=True, help_text='a related Ocp Artwork Type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ocp_skill_types', to='work.Ocp_Artwork_Type', verbose_name='ocp artwork_type')),
                ('resource_type', models.OneToOneField(blank=True, help_text='a related OCP ResourceType', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_skill_type', to='valueaccounting.EconomicResourceType', verbose_name='ocp resource_type')),
            ],
            options={
                'verbose_name': 'Type of General Skill Resources',
                'verbose_name_plural': 'o-> Types of General Skill Resources',
            },
            bases=('general.job',),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joining_style', models.CharField(choices=[('subscription', 'subscription'), ('shares', 'shares'), ('moderated', 'moderated'), ('autojoin', 'autojoin')], default='autojoin', max_length=12, verbose_name='joining style')),
                ('auto_create_pass', models.BooleanField(default=False, verbose_name='auto create users')),
                ('visibility', models.CharField(choices=[('private', 'private'), ('FCmembers', 'only FC members'), ('public', 'public')], default='FCmembers', max_length=12, verbose_name='visibility')),
                ('resource_type_selection', models.CharField(choices=[('project', 'your project'), ('all', 'all platform')], default='all', max_length=12, verbose_name='resource type selection')),
                ('fobi_slug', models.CharField(blank=True, max_length=255, verbose_name='custom form slug')),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project', to='valueaccounting.EconomicAgent', verbose_name='agent')),
            ],
        ),
        migrations.CreateModel(
            name='SkillSuggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(help_text='A new skill that you want to offer that is not already listed', max_length=128, verbose_name='skill')),
                ('suggestion_date', models.DateField(auto_now_add=True, null=True)),
                ('state', models.CharField(choices=[('new', 'new'), ('accepted', 'accepted'), ('declined', 'declined')], default='new', editable=False, max_length=12, verbose_name='state')),
                ('resource_type', models.ForeignKey(blank=True, help_text='this skill suggestion became this ResourceType', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_suggestions', to='valueaccounting.EconomicResourceType', verbose_name='resource_type')),
                ('suggested_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skill_suggestion', to=settings.AUTH_USER_MODEL, verbose_name='suggested by')),
            ],
        ),
        migrations.CreateModel(
            name='Ocp_Unit_Type',
            fields=[
            ],
            options={
                'verbose_name': 'Type of General Unit',
                'verbose_name_plural': 'o-> Types of General Units',
                'proxy': True,
                'indexes': [],
            },
            bases=('general.unit_type',),
        ),
        migrations.AddField(
            model_name='ocp_record_type',
            name='ocp_skill_type',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='a related General Skill Type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_record_types', to='work.Ocp_Skill_Type', verbose_name='general skill_type'),
        ),
        migrations.AddField(
            model_name='ocp_artwork_type',
            name='general_unit_type',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='a related General Unit Type', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_artwork_types', to='general.Unit_Type', verbose_name='general unit_type'),
        ),
        migrations.AddField(
            model_name='ocp_artwork_type',
            name='rel_material_type',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='a related General Material Type', limit_choices_to=work.models.Ocp_Artwork_Type.get_Q_material_type, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rel_types_material', to='work.Ocp_Artwork_Type', verbose_name='related material_type'),
        ),
        migrations.AddField(
            model_name='ocp_artwork_type',
            name='rel_nonmaterial_type',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='a related General Non-material Type', limit_choices_to=work.models.Ocp_Artwork_Type.get_Q_nonmaterial_type, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rel_types_nonmaterial', to='work.Ocp_Artwork_Type', verbose_name='related nonmaterial_type'),
        ),
        migrations.AddField(
            model_name='ocp_artwork_type',
            name='resource_type',
            field=models.OneToOneField(blank=True, help_text='a related OCP ResourceType', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ocp_artwork_type', to='valueaccounting.EconomicResourceType', verbose_name='ocp resource_type'),
        ),
        migrations.AddField(
            model_name='joinrequest',
            name='project',
            field=models.ForeignKey(help_text='this join request is for joining this Project', on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='work.Project', verbose_name='project'),
        ),
    ]
